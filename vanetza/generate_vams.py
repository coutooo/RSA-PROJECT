import json
import paho.mqtt.client as mqtt
import threading
from time import sleep

coordinates = [
    [40.64295612665284,-8.656200885707223],
    [40.64290725527005,-8.656163334781015],
    [40.64285431123166,-8.656120419436776],
    [40.642805439774314,-8.656098961764657],
    [40.64275656828118,-8.656072139674508],
    [40.64270769675227,-8.65603995316633],
    [40.6426588251876,-8.65601313107618],
    [40.642614026221864,-8.655975580149972],
    [40.64255293667468,-8.655927300387704],
    [40.64252850084015,-8.655862927371347],
    [40.6425447913975,-8.65578782551893],
    [40.642577372500256,-8.655712723666513],
    [40.64261809885636,-8.655648350650155],
    [40.64266289781935,-8.655626892978036],
    [40.64270769675227,-8.655648350650155],
    [40.642744350402296,-8.655675172740304],
    [40.64278914928056,-8.655701994830453],
    [40.64283802074983,-8.655728816920602],
    [40.642878746946906,-8.655755639010751],
    [40.64291947311909,-8.65577709668287],
    [40.64296427187985,-8.65579855435499],
    [40.643013143220855,-8.655830740863168],
    [40.643066087133306,-8.655857562953317],
    [40.64300499799985,-8.655825376445138],
    [40.64297648971843,-8.65580391877302],
    [40.642927618350555,-8.65578782551893],
    [40.642895037418754,-8.655825376445138],
    [40.642878746946906,-8.655884385043466],
    [40.64284616599124,-8.655927300387704],
    [40.64284616599124,-8.655991673404062],
    [40.64283394812877,-8.65605068200239],
    [40.64283394812877,-8.656082868510568],
    [40.64288689218333,-8.656136512690866],
    [40.64290318265322,-8.656157970362985],
    [40.64293576358102,-8.656190156871164],
    [40.64296019926645,-8.656206250125253]
]

coordinates2 = [
    [40.642413515684794,-8.656174600091619],[40.64242980627021,-8.656155824628515],[40.64243795156141,-8.656139731374425],[40.64244609685162,-8.656120955911321],[40.642456278463015,-8.656099498239202],[40.64246646007285,-8.656072676149053],[40.64247256903799,-8.656056582894964],[40.64248071432398,-8.656035125222845],[40.64248885960898,-8.65601634975974],[40.64249700489298,-8.655992209878606],[40.64250311385535,-8.655976116624517],[40.642507186496616,-8.655962705579443],[40.642517368098666,-8.655938565698309],[40.64252144073907,-8.655925154653234],[40.64252754969917,-8.65590637919013],[40.642533658658735,-8.65588492151801],[40.64254384025674,-8.655863463845892],[40.64255402185322,-8.655839323964758],[40.642560130810345,-8.655817866292638],[40.64256827608565,-8.655788361993475],[40.64257642135998,-8.65576422211234],[40.6425845666333,-8.655742764440221],[40.64259271190563,-8.655705213514013],[40.64260085717696,-8.655675709214849],[40.64261103876474,-8.65565425154273],[40.642602893494654,-8.655681073632879],[40.64259271190563,-8.655713260141058],[40.6425845666333,-8.655740082231207],[40.64257642135998,-8.65576958653037],[40.642566239766936,-8.655799090829534],[40.642551985534055,-8.655831277337713],[40.64254180393727,-8.655863463845892],[40.64253162233893,-8.655892968145055],[40.642519404418906,-8.65592247244422],[40.64250515017599,-8.655957341161413],[40.64249700489298,-8.655989527669592],[40.642486823287825,-8.656013667550726],[40.64247460535958,-8.656045854058904],[40.64246646007285,-8.656069993940038],[40.64245424214087,-8.656099498239202],[40.64244406052917,-8.656123638120336],
    [40.64243184259312,-8.656150460210485],[40.6424196246548,-8.656174600091619]
]

def on_connect(client, userdata, flags, rc):
    print("Connected with result code " + str(rc))


# Ã‰ chamada automaticamente sempre que recebe uma mensagem nos tÃ³picos subscritos em cima
def on_message(client, userdata, msg):
    message = json.loads(msg.payload.decode('utf-8'))

    print('Topic: ' + msg.topic)
    print('Message' + message)

    # lat = message["latitude"]
    # ...


def generate(client, coordinate):
    with open('in_vam.json') as f:
        m = json.load(f)

    latitude, longitude = coordinate
    m["vamParameters"]["basicContainer"]["referencePosition"]["latitude"] = latitude
    m["vamParameters"]["basicContainer"]["referencePosition"]["longitude"] = longitude

    m = json.dumps(m)

    client.publish("vanetza/in/vam", m)
    f.close()


client1 = mqtt.Client()
client1.on_connect = on_connect
client1.on_message = on_message
client1.connect("192.168.98.20", 1883, 60)  # .20 -> vru1

client2 = mqtt.Client()
client2.on_connect = on_connect
client2.on_message = on_message
client2.connect("192.168.98.21", 1883, 60)  # .21 -> vru2

threading.Thread(target=client1.loop_forever).start()
threading.Thread(target=client2.loop_forever).start()

counter = 0
counter2 = 0
while True:
    if counter >= len(coordinates):
        counter = 0
    if counter2 >= len(coordinates2):
        counter2 = 0

    coordinate = coordinates[counter]
    coordinate2 = coordinates2[counter]

    generate(client1, coordinate)
    generate(client2, coordinate2)

    counter += 1
    counter2 += 1
    sleep(1)
